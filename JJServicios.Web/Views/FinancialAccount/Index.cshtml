
<style type="text/css">
    input, textarea, select, button {
    text-rendering: auto;
    color: initial;
    letter-spacing: normal;
    word-spacing: normal;
    text-transform: none;
    text-indent: 0px;
    text-shadow: none;
    display: inline-block;
    text-align: left;
    margin: 0em;
    font: 13.3333px Arial;
}
</style>



    @(Html.Kendo().Grid<JJServicios.DB.Contracts.FinancialAccount>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Name);
          columns.Bound(c => c.UpdateDate).Width(90).Title("Fecha").ClientTemplate("#=kendo.toString(UpdateDate,'yyyy-MM-dd')#");
          columns.Command(command =>
          {
              command.Edit()
          .Text(" ").UpdateText(" ").CancelText(" ");
              command.Destroy().Text(" ");
          }).Width(160);


      })
      .ToolBar(toolbar =>
      {
          toolbar.Create().Text("Nuevo");
      })
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model =>
          {
              model.Id(p => p.Id);
              model.Field(fld => fld.UpdateDate).Editable(false);
          })
          .Read(read => read.Action("FinancialAccount_Read", "FinancialAccount"))
          .Update(update => update.Action("FinancialAccount_Update", "FinancialAccount"))
          .Destroy(destroy => destroy.Action("FinancialAccount_Destroy", "FinancialAccount"))
          .Create(create => create.Action("FinancialAccount_Create", "FinancialAccount"))
      )
    )
